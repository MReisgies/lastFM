{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Top Songs Dokumentation Inhaltsverzeichnis Zusammenfassung und Zielsetzung Dokumentation Teil 1: SPA mit API-Call Teil 2: React Native Umsetzung Fazit Weitef\u00fchrendes Zusammenfassung und Zielsetzung Im ersten Schritt m\u00f6chte ich eine Webanwendung gestalten, die API Calls verwaltet. Im zweiten Schritt m\u00f6chte ich mich mit der Umsetzung in React oder React Native besch\u00e4ftigen. Ziel: Eine schlichte Web Single Page Application aufbauen, die die LastFM API anspricht. Diese Anwendung soll im zweiten Schritt auf eine hybride App \u00fcbertragen werden. In der Dokumentation m\u00f6chte ich auf Gemeinsamkeiten und Unterschiede der Ans\u00e4tze eingehen.Zudem m\u00f6chte ich den Zusammenhang zwischen React im Web und React Native verstehen um f\u00fcr kommende Projekte den richtigen Ansatz w\u00e4hlen zu k\u00f6nnen. Dokumentation Aus Interesse an verschiedenen Dokumentationsm\u00f6glichkeiten, werde ich den wesentlichen Teil der Dokumentation in einer statischen MkDocs Website ver\u00f6ffentlichen. Teil 1: SPA mit API-Call LAST.fm Musikdatenbank API: \u00b7 API ist frei verf\u00fcgbar \u00b7 Nutzung mit einfacher user-key Authentifizierung sowie mit OAuth 2.0 m\u00f6glich Funktionsumfang: \u00b7 Interpreten Suchfunktion \u00b7 Es sollen die bekanntesten Titel eines Musik Interpreten aufgelistet werden Coding mit HTML und Javascript sowie grundlegende Gestaltung mit CSS Teil 2: React Native Umsetzung Ziel: SPA aus Teil 2 auf React Native umgestalten Funktionsumfang: \u00b7 lastFM API Call wie in der SPA \u00b7 App Menu mit react navigation aufbauen \u00b7 Login \u00fcber Social Media: Suchanfragen im eigenen Profil abspeichern \u00b7 Suchanfragen in Datenbank speichern mit Google Firestore \u00b7 Navigationsstruktur: \u00a7 lastFM search: \u00b7 API Call 1: Top Songs \u00b7 API Call 2: Albums \u00b7 API Call 3: Artist Metadata \u00a7 Login About (Impressum mit Link zur MkDocs Dokumentation)","title":"Top Songs Dokumentation"},{"location":"#top-songs-dokumentation","text":"","title":"Top Songs Dokumentation"},{"location":"#inhaltsverzeichnis","text":"Zusammenfassung und Zielsetzung Dokumentation Teil 1: SPA mit API-Call Teil 2: React Native Umsetzung Fazit Weitef\u00fchrendes","title":"Inhaltsverzeichnis"},{"location":"#zusammenfassung-und-zielsetzung","text":"Im ersten Schritt m\u00f6chte ich eine Webanwendung gestalten, die API Calls verwaltet. Im zweiten Schritt m\u00f6chte ich mich mit der Umsetzung in React oder React Native besch\u00e4ftigen. Ziel: Eine schlichte Web Single Page Application aufbauen, die die LastFM API anspricht. Diese Anwendung soll im zweiten Schritt auf eine hybride App \u00fcbertragen werden. In der Dokumentation m\u00f6chte ich auf Gemeinsamkeiten und Unterschiede der Ans\u00e4tze eingehen.Zudem m\u00f6chte ich den Zusammenhang zwischen React im Web und React Native verstehen um f\u00fcr kommende Projekte den richtigen Ansatz w\u00e4hlen zu k\u00f6nnen.","title":"Zusammenfassung und Zielsetzung"},{"location":"#dokumentation","text":"Aus Interesse an verschiedenen Dokumentationsm\u00f6glichkeiten, werde ich den wesentlichen Teil der Dokumentation in einer statischen MkDocs Website ver\u00f6ffentlichen.","title":"Dokumentation"},{"location":"#teil-1-spa-mit-api-call","text":"LAST.fm Musikdatenbank API: \u00b7 API ist frei verf\u00fcgbar \u00b7 Nutzung mit einfacher user-key Authentifizierung sowie mit OAuth 2.0 m\u00f6glich Funktionsumfang: \u00b7 Interpreten Suchfunktion \u00b7 Es sollen die bekanntesten Titel eines Musik Interpreten aufgelistet werden Coding mit HTML und Javascript sowie grundlegende Gestaltung mit CSS","title":"Teil 1: SPA mit API-Call"},{"location":"#teil-2-react-native-umsetzung","text":"Ziel: SPA aus Teil 2 auf React Native umgestalten Funktionsumfang: \u00b7 lastFM API Call wie in der SPA \u00b7 App Menu mit react navigation aufbauen \u00b7 Login \u00fcber Social Media: Suchanfragen im eigenen Profil abspeichern \u00b7 Suchanfragen in Datenbank speichern mit Google Firestore \u00b7 Navigationsstruktur: \u00a7 lastFM search: \u00b7 API Call 1: Top Songs \u00b7 API Call 2: Albums \u00b7 API Call 3: Artist Metadata \u00a7 Login About (Impressum mit Link zur MkDocs Dokumentation)","title":"Teil 2: React Native Umsetzung"}]}